released on 20 12 16

!!general 
* create dynamic plugins using VL: ((Dynamic VL Plugin Reference))
* no longer runs on WinXP since now requires .net 4.6, see: ((blog:.net-4.6-upgrade-in-alpha-builds))
** AudioRecordSelector and AudioMixer were therefore removed
* added MS VisualStudio Redistributable 2015 to setup.exe
* boygrouping: fix for clients sometimes not finding addons
* performance improvement for Raw nodes, see ((blog:raw-performance-speedup))
* upgraded HTML texture node to CEF 3.2840.1513.gf7effc7 (Chromium 54.0.2840.59) ((blog:htmltexture-update-to-chromium-54))
* Stencil Buffer support in EX9: check girlpower/Graphics/DX9/Shader/StencilBufferDemo.v4p

* improved NodeBrowser tag search: now only finds tags starting with capital letter
* show internal nodes in nodebrowser by typing "i "

* fixed a case where CTRL+G failed
* patches marked as readonly now show an error when you try to save them
* nodes now indicate evaluation via textcolor
* locked patches now cannot be scrolled
* increased default size for c# editor
* values, colors (..) can flow over node pins: ((blog:mixed-data-over-that-same-ol-pin))
* enums now less picky. enum iobox now works if only connected on input pin.
* in case a IOBox (Raw) was too small it didn't show anything.
* fixed dynamic plugins not being recompiled when copied to another computer (https://discourse.vvvv.org/t/cant-add-dynamic-plugin-if-i-copy-it-from-one-machine-to-another/14126)
* fixed Reload bar not showing up in C# editor when external editor (like VS) was using a rename to save the file.

!!fixed nodes
* fixed cloning/copying of certain spread types in generic nodes like Buffer/Queue/QueueStore/RingBuffer (https://discourse.vvvv.org/t/buffer-raw-bug/13445)
* XFile node will optimize the created mesh now. Same as done by Collada node (https://discourse.vvvv.org/t/x-mesh-subsets-count-dropping-performance/13457)
* fixed crash when scrolling the HTMLTexture node
* fixed zoom level in HTMLTexture node (https://discourse.vvvv.org/t/htmltexture-bug-with-zoomlevel/13670)
* each new mouse generated by the MouseStates (Mouse Join) node reported its notifications only to the first subscriber (https://discourse.vvvv.org/t/mousestates-split-bug/13961)

* Resample (Spreads) has its ''Mirror'' mode fixed
* Resample (3d Vector) and Resample (Color) have been cleaned up
* Separate (String) fixed ''Ignore Beetween'' for all quotes
* RegEx (String) fix for using round open brackets in expression
* Length (String) fixed a bug when it was not evaluated in the first frame
* Ord2Enum (Enumerations) now clamps input to not overflow
* Entry2String (Enumerations) now updates correctly when an enum changes
* Damper (Animation Jump): fix for initialization
* Timeliner (Animation) sometimes did not save correctly
* Grow (2d) now proper spreadable
* WindowLists (Window) has its ((pin:TopMostHandle)) output fixed
* FrameDifference (Animation). fix. now starting with 0 for the first frame
* Random (Value). fix for https://discourse.vvvv.org/t/random-value-return-same-value-in-module/13430
* fix for https://discourse.vvvv.org/t/framedelay-critical-issue/13864

!!changed nodes
* added "Position in PixelXY" and "Client AreaXY" outputs to Mouse (Devices Desktop), Mouse (Devices Window) and MouseState (Mouse Split) nodes
* Leap (Devices) completely reworked
* Renderer (HTML Url) and Renderer (HTML String) now use IE11
* Renderer (EX9): DepthBuffer D24S8 format to enable the Stencil Buffer 
* Writer (EX9.Texture) can now save volumetextures

* Processors (System) now async
* IRC (Network Open): added ((pin:Password)) and ((pin:Channel Password))
* UDP (Server) and UDP (Server String) now have a ''Status'' output that will tell you if the port fails to open
* IOBox Tooltips now show Tags
* String IOBoxes that have an ''Open'' button can now be ALT-clicked to open the file in Explorer
* IOBox (Bang/Press) now don't add to UNDO anymore
* DrawVertexID (EX9) is now PointID (DX9 2d/3d)

!!new nodes
* vastly improved support for Arduino/Firmata, see: ((blog:arduino-second-service))
* new EditingFramework, see: ((blog:introducing-the-editing-framework)) which brings vastly improved:
** PointEditor
** BezierEditor
** BezierPatchEditor
** MeshEditor
** Camera (2d, 3d)
* TUIO now with send and receive nodes, see: ((blog:how-tuio-do))
* easy Spout (DX9 Sender/Receiver) modules, see ((blog:spout-0|Spout))
* easy GIF Rekorder (Windows), see ((blog:introducing-the-rekorder))
* ArtNet (Network Sender/Receiver) now with Net, SubNet and Universe and can be used on any UDP port
* Eyetracker (Devices TheEyeTribe) including calibration mode

* CircularSpread (Spreads 2d): Generates a circle in 2d space
* SpiralSpread (Spreads 2d): Generates a star in 2d space
* StarSpread (Spreads 2d): Generates a star in 2d space
* RectangleSpread (Spreads): Generates a rectangle in 2d space
* GridSpread (Spreads 2d/3d): Generates a grid in 2d/3d space
* HexGridSpread (Spreads 2d): Generates a hexagonal grid of positions in 2d space
* RandomSpread (Spreads 2d/3d): Generates a random point cloud in 2d/3d space

* Distinct (String): Returns a spread stripped of duplicates
* Except (String): Returns a spread containing slices from Input 1 except slices from Input 2
* Intersect (String): Returns all distinct elements that are found in both of the Input spreads.

* Wanderer (Animation 2d/3d: Simulates an easily parameterized random walk
* Resample (2d Vector)
* ArcLength (2d/3d): Lets a curve, specified by a spread of vectors, be sampled at arbitrary positions
* Grow (2d NonUniform): Extrudes a polygon by a given factor nonuniformly for X and Y
* Undo (Value, 2d, 3d, String, Color)

* MJpegStream (EX9.Texture Sender/Receiver)
* ProjectedTexture (EX9.Effects)
* ConstantVC (EX9.Effect): Constant effect that takes VertexColor into account

* Point (DX9 2d/3d)
* Triangle (DX9 2d/3d): Renders a triangle in the DX9 window
* Triangle (EX9.Geometry 2d/3d)
* BezierPatch (EX9.Geometry 2d/3d)
* ViewCone (EX9)

* Select (Transform)
* Homography (Transform 2d Quad) assumes the input points are a quad centered at the origin, very fast
* Reader/Writer (Transform ViewProjection)

* NodeInfos (VVVV): Returns a list of all authors and search paths
* SetExposedPin (VVVV): Allows writing data directly to exposed pins
* UpdateView (VVVV): Allows to disable the vvvv UI to squeeze out some more performance
* Clock (VVVV) let's you implement your notion of time. All time based animation nodes will react to that.
* ADSR (Animation FrameBased/TimeBased) advanced envelopment curves with proper behavior of the enabled input 
* Select (2d/3d/4d) performance optimized select nodes for vectors, use instead of Select (Value Vector)
* Gesture (Devices Window): returns windows gesture events ((blog:zoom-pan-rotate-touchgestures))
** Pan-, Zoom-, Rotate-, TwoFingerTap- & PressAndTapState (Gesture Split)
** Pan-, Zoom-, Rotate-, TwoFingerTap- & PressAndTapEvents (Gesture Split)
* Stencil (EX9.Renderstate): set stencil state for ex9 objects

!!plugin interface
* NuGet packages now usable in AnyCPU build configurations
* added support for byte/sbyte/char types to plugin interface
* fixed enum index reporting wrong value after being updated (https://discourse.vvvv.org/t/enum-index-reporting-wrong-index/13947)
* fixed a sync issue in output stream implementations between unmanaged backing store and managed length property
* whether or not a bin size pin gets created by the plugin hosting layer can now be controlled through the new PinAttribute.BinSizeWrapCount property. By default bin size pins will be created for each dimension.
* added possibility to allow override of plugin in- and output properties (https://discourse.vvvv.org/t/overriding-pinattributes/14334)
* fixed ordering of bin size pins when used in pin groups.
* IHDEHost.EnumChanged: listen to changes of any enum
* you now can accept any data on your input and check for values, colors (..) dynamically: ((blog:mixed-data-over-that-same-ol-pin))
* implement ITimeProvider to provide a low latency clock that implements your notion of time: ((blog:go-back-in-time-now))