released on 02 09 14

!!general
* always on top stays after toggling fullscreen: ((forum:always-on-top-command-not-honoured-after-going-fullscreen-and-back-with-a-window))
* nodebrowser now works on "AlwaysOnTop" patches: ((forum:gui-bug))
* fixed: ((forum:right-clicking-string-input-pins-containing-nil))
* fixed troubles with selecting links: ((forum:gui-strange-behaviour))
* fixed crash when bezier-handle of link was touched over a node
* ctrl+g new windows pop up below cursor fixing: ((forum:ctl g-can-have-the-patch-window-behind-the-task-bar)) & ((forum:gui-strange-behaviour))
* now use shift+click to open editor for gui-plugins: ((forum:ctrl- -click-non-consistent-behavior))
* nodebrowser now keeps height as set and is always completely visible
* optimized patch redrawing (should also reduce occurances of infamous IOBox bug)
* a patch with evaluate=0:
** now now allows default patching/panning: ((forum:gui-strange-behaviour))
** shows a "NO" cursor when hovering input pins indicating that you cannot change those
* transformations: changed the way projection nodes and renderer work. default z visibility changed to 0..1 (was -1..1). see: ((forum:ortho-in-dx11)) this was done to improve compatiblity with dx11 and custom shaders from other systems. if nothing is connected to the projection pin of a renderer though visibility is still -1..1 to reduce the effects of the change
* got rid of freeze on connect: ((forum:extreme-cpu-usage-after-very-basic-io-nesting))
* got rid of hidden connections by showing pin and connections always (pin visibility doesnt matter if connected) see: ((forum:hidden-pin-connections#comment-156594)) (both problems/patches)
* added a command to cleanup patches with corrupt links. see: ((forum:corrupt-link-inside-reader-(string)?full=1))
* fixed upstream value type / downstream reference type issue in plugin node connections introduced in beta32
* SVG nodes now use native SvgDocument class: ((forum:svg-custom-struct))
* removed shortcut for UpdateView (ctrl+U) 
* scrolling of patches gets saved and boygrouped
* introduced simple logging for setup.exe by calling it with /log
* improved patch loading time a little

!!code editor
* for each file only one editor will be open
* improved completion window for C# by adding async keyword and prioritizing entries by their kind (field/property etc.)
* completion window for HLSL will only popup when pressing Ctrl + Space. It will also only show predefined functions and parameters as no proper AST for HLSL available.
* fixed mouse wheel handling in code completion windows https://github.com/vvvv/vvvv-sdk/pull/203
* fixed bracket search in code editor
* removed runtime errors from editor
* fixed exception when document ends with /*comment*/: ((forum:code-editor-bug))

!!new nodes
* Architecture (VVVV): ((forum:about-(vvvv)-x86x64-pin))
* MouseMatch (Mouse) node able to detect certain mouse events like up/down/wheel and click
* SplitAt (Value/2d/3d/...) nodes - splits a spread at given position into two subspreads
* AsDocument (SVG) and Join (SVG) make it possible to create and render multiple svg textures ((blog:two-cool-svg-nodes))
* ApplyTransform (Mouse) to transform mouse coordinates
* Drag (Value) same as Drag (2d) only for one dimension
* Merge (Mouse) - merges multiple mice to one
* SecondLook (EX9 Softimage) - module that lets you debug your camera better than TestCamera did
* ActiveWindow (Windows) returns the handle of the active window
* added generic nodes (cons, queue, zip...) for: XElement, XDocument, XAttribute

!!fixed nodes
* Clean (String): ((forum:clean-(string)-leaves-dirt-when-trying-to-deal-with-only-spaces))
* Reader (Raw SharedMemory): ((forum:reader-(raw-sharedmemory)-name-not-updating))
* Dir (File): ((forum:dir-file-count-in-subdirectories))
* IOBox (Enumeration): ((forum:show-slice-index-iobox-(enumerations)))
* IOBox (Node): quick fix for "iobox node slicecount indicator wrong?!" ((/forum-alpha/getslice-and-iobox-%28node%29))
* RS232 (Devices) will reset outputs should an IOException occur: ((forum:rs232-connected-pin-does-not-works.))
* = (Color) now spreadable ((forum:=-(color)-does-not-spread))
* Mouse should not get clamped to -1/1 anymore - ((forum:mousestates-node-clamps-positionxy-to-11))
* cleanup on tcp (server & client) nodes evaluation and slice management. fixes a division by zero on startup
* when disabling the Keyboard (Devices) nodes a keyboard device lost notification will be generated - downstream keyboard nodes will reset their internal state
* fixed division by zero exception in collada loader
* some outpins didn't evaluate their node when asked for their value - which could lead to strange phenomena. A thorough cleanup yielded a fix for the Expr.Error, OSCEncoder.Status, Renderer (HTML URL), Intersect.FormerIndex, Convert (String Legacy), Reader (Raw SharedMemory)
* ConstantWrap (EX9.Effect) now works for spherical texturecoordinates
* AsRaw (EX9.Texture) now ~30 times faster
* DynamicTexture (EX9.Texture Raw) now ~10 times faster
* Random (Value) now initializes correctly ((forum:random-not-really-random))
* LFO (Value) does not bang twice on reset ((forum:resetting-lfo-while-cycles>0-causes-it-to-change-twice))
* Intersect (Mesh Ray) is now also fast in dx9ex mode
* Buffer nodes initialize corrcetly ((forum:buffer-(spreads)-strange-behavior))

!!changed nodes
* Copier (File), Copier (File Async) now create target directory if it does not exist
* IOBox (Value Advanced): ((forum:iobox-(value-advanced)-created-as-integer-default-max-and-min-why-so-low))
* IOBox (Value Advanced): ((forum:toggle-bug-(gui-only)))
* Finder (VVVV) now has an option to search inside modules
* Select nodes got tagged with resample, repeat, duplicate
* global input device nodes will return dummy device in case no device is installed on the system: ((forum:error-without-hid-keyboard-(since-beta32- -32.1)))
* reworked MouseStates (Join) node so that new downstream observer will get notifications of current frame too: ((forum:new-mousestates-and-nil-%28beta32%29))
* all file related nodes like Writer, Reader, Copier, ... now have a ((pin:Success)), ((pin:Error Message)) and ((pin:Error)) pin.
* AsXElement (XML) now has a ((pin:Success)) and an ((pin:Error Message)) pin
* Sync (Network) node now has a ((pin:Seek Threshold)) and the port pin is spreadable to serve multiple clients on the same machine
* Cursor (DX9) now has different "Cursor Types"
* Player (EX9.Texture) will exclude hidden files: ((forum:feature-request-player-%28ex9.texture%29-option-to-exclude-hidden-files))
* Reader (Raw SharedMemory) will not try to create a new shared memory location anymore. It will only try to open an existing one. Should that fail the new status pins will report about it and a warning will get written to the node's log.

!!plugininterface
* streams are now available as ulong/long https://github.com/vvvv/vvvv-sdk/pull/204
* thorough delphi side error handling&logging of clr code throwing exceptions
* VMath vecors and matrices now implement IEquatable<T> and IComparable<T> for your Linq pleasure
* VColor got a simple Serialize/Deserialize method for RGBA color