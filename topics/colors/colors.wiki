!Specifying colors
{SPLIT()}

{img src = "vvvv_color-join3.png" } 

[http://en.wikipedia.org/wiki/Color_model#RGB_color_model|RGB color model]
[http://en.wikipedia.org/wiki/HSL_and_HSV|HSL and HSV representation]

!!!!Related nodes
__Specifiyng Colors__
((node:RGB (Color Join)))
((node:RGB (Color Join Picker)))
((node:RGB (Color Join Vector)))

((node:HSV (Color Join)))
((node:HSV (Color Join Picker)))
((node:HSL (Color Join)))

((node:AsColor (String Hex)))

__Splitting into components__
((node:RGB (Color Split)))
((node:RGB (Color Split Vector)))
((node:HSL (Color Split)))
((node:HSV (Color Split)))

~~~

Colors in vvvv are represented by 4 color components in a range __0..1__:
* __R__ for Red
* __G__ for Green
* __B__ for Blue
* __A__ for Alpha (defines transparency)

There is also another way to represent a color in RGB space, which is typically more intuitive to adjust:
* __HSL__ (Hue, Saturation, Lightness)
* __HSV__ (Hue, Saturation, Value) aka HSB.

The ((node:IOBox (Color))) uses the HSV representation by default, see ((/documentation/ioboxes#color|Color IOBoxes)).

Note, other software packages can specify individual components in another ranges:
* RGB: 0..255 for the Color channels and 0..100% for the Alpha
* HSL: 0..360° for the Hue and 0..100% for the Saturation and Lightness.

Don't forget to convert the values to the 0..1 range.
There are convenient ((node:RGB (Color Join Picker))), ((node:HSV (Color Join Picker)))and ((node:AsColor (String Hex))) for helping. Or just type the expression like 270/360 into the IOBox to convert 207° of Hue into 0..1 range. 

{SPLIT}

!Saving / sending colors
{SPLIT()}

!!!!Related nodes

((node:AsString (Color Hex)))
((node:AsString (Color)))
((node:AsRaw (Color)))
((node:RGB (Color Split Vector)))

((node:AsColor (String Hex)))
((node:AsColor (String)))
((node:AsRaw (String)))
((node:RGB (Color Join Vector)))

~~~

When you need to save / load a color to a file or send / receive it over the network it has to be represented as a String or Raw data.

{SPLIT}

!Color Manipulation
{SPLIT()}
!!!!Related nodes

((node:- (Color)))
((node:+ (Color)))
((node:* (Color)))
((node:= (Color)))
((node:RGB (Transform)))
((node:HSL (Transform)))
((node:Blend (Color)))
((node:InputMorph (Color)))

~~~

Colors in vvvv can be compared, transformed and interpolated.

__See also:__
* ((/contribution/3d-lut-color-grading|3D LUT Color Grading)) by ((user:eno))
* ((/contributions/all/3422|Related Contributions))

{SPLIT}

!Color Space conversion
{SPLIT()}

!!!!Related nodes
((node:HSLtoHSV (Color)))
((node:HSVtoHSL (Color)))

~~~

These nodes are little helpers to convert between HSL and HSV spaces.

{SPLIT}

!Palettes
{SPLIT()}

[http://devmag.org.za/2012/07/29/how-to-choose-colours-procedurally-algorithms/|How to Choose Colours Procedurally]

!!!!Related nodes

((node:RetroColors (Color)))
((node:Windows98Colors (Color)))
((node:NetscapeColors (Color)))
((node:Spectrum (Color)))

~~~

__See also:__

* ((/contributions/all/3422|ColourLovers API)) by ((user:geometrica))
* ((/contributions/all/3422|Related Contributions))

{SPLIT}
